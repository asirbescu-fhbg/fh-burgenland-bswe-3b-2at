name: CI Workflow

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci:
    name: Java CI with Gradle
    runs-on: ubuntu-latest
    steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Setup JDK 21
          uses: actions/setup-java@v4
          with:
            distribution: oracle
            java-version: 21

        - name: Setup Gradle
          uses: gradle/actions/setup-gradle@v3

        - name: Grant execute permission to gradlew
          run: chmod +x ./gradlew

        - name: Run checkstyle
          run: ./gradlew checkstyleMain checkstyleTest

        - name: Run unit tests
          if: ${{ success() }}
          run: ./gradlew test

        - name: Build Jar file
          if: ${{ success() }}
          run: ./gradlew bootJar

        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: examination
            path: build/libs/*.jar

  lint-docker:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Lint Dockerfile with hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  docker:
    name: Build and publish docker image
    runs-on: ubuntu-latest
    needs: [ ci, lint-docker ]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}